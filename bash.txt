  if [ что-то тут ]
 then
 
 if [ -d "/path/to/directory" ]; then
  echo "Каталог существует."
else
  echo "Каталог не существует."
fi

if [ -w "/path/to/file_or_directory" ]; then
  echo "Права на запись есть."
else
  echo "Права на запись отсутствуют."
fi

 if [ -f "/path/to/directory" ]; then
  echo "файд существует."
else
  echo "файла не существует."
fi


exit 1 - не правильное завершение файла 

#!/bin/bash - обезательный файл в начале

#!/bin/bash

# Определяем источник и целевой каталог для бекапа
source_dir="/path/to/source"
backup_dir="/path/to/backup"

# Создаем каталог для бекапа, если он не существует
mkdir -p "$backup_dir"

# Копируем содержимое источника в каталог бекапа
cp -r "$source_dir" "$backup_dir"

# Проверяем успешность операции копирования
if [ $? -eq 0 ]; then
  echo "Бекап успешно создан в $backup_dir"
else
  echo "Ошибка при создании бекапа"
  exit 1
fi

почему сdgroup команды не работают

&& - и 
|| - или
! - нет

-d fileПроверяет, существует ли файл, и является ли он директорией.
-e fileПроверяет, существует ли файл.
-f file Проверяет, существует ли файл, и является ли он файлом.
-r fileПроверяет, существует ли файл, и доступен ли он для чтения.
-s file Проверяет, существует ли файл, и не является ли он пустым.
-w fileПроверяет, существует ли файл, и доступен ли он для записи.
-x fileПроверяет, существует ли файл, и является ли он исполняемым.

read: Базовая команда для чтения ввода пользователя.
-p "Prompt": Эта опция указывает на то, что перед вводом пользователю будет показано сообщение с приглашением.

read -p  "Введи свое имя: " name   (name это переменная в кторую будет сохраняться то что ввел пользователь)
echo "Добро пожаловать $name"
-e проверяет существование файла или каталога

пррчитать статью


Переменная $* содержит все переданные скрипту параметры как единый фрагмент данных, в то время как в переменной $@ они представлены самостоятельными значениями. Какой именно переменной воспользоваться — зависит от того, что именно нужно в конкретном сценарии.

