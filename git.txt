инициализация - git init (c нуля),
		git clone имя-репозитория . - (готовый проект)
		
		git add имя-файла - чтобы добавить файл в git 
		git add . - чтобы добавить все файлы в git 
		
		git commit - чтобы закомитеть изменения в git 
		git commit -m "Комментарий" - чтобы закомитеть с комментарием (правильный вариант комита)
		
		git status - чтобы узнать текущее состояние 
		
		git config --list - просмотреть конфиг текущего проекта
		git push - отправляет файлы в репозиторий в gitlab
		git push имя-репозитория имя-ветки
		git pull - забирает файлы другого разроботчика с
gitlab
		
		
		git stash - спрятать последнее изменение
		git stash save имя - спрятать в конретный тайник
		git stash apply (может тоже какое-то имя) - вытащить из тайника
		fit fetch - забирает с севера (git hub) всю информацию
		
<<<<<<< HEAD
		Remote общение — это процесс взаимодействия между людьми, находящимися в разных географических точках, с использованием различных технологий и средств связи. 
		LAN - локальный сеть 
		WLAN - расширеная сеть
		bass провод
		Технологии BAS представляют собой комплекс решений и устройств для автоматизации управления различными системами и оборудованием в зданиях.
		Уникаст процесс
		мультикаст процесс 
		Уникаст — это процесс передачи данных от одного отправителя к одному получателю в сети. 
		Мультикаст — это процесс передачи данных от одного отправителя к группе получателей в сети. 
		Бродкаст (Broadcast) — это процесс передачи данных в сети, при котором сообщение отправляется от одного отправителя всем узлам в сети. 
		Сокеты (sockets) — это программные интерфейсы, которые позволяют компьютерам обмениваться данными через сеть. 
		протокол архитектуры
		Факс (Fax, сокращение от facsimile) — это технология, которая используется для передачи копий документов через телефонные линии. 
		Команда scp (secure copy) — это утилита для безопасной передачи файлов между хостами в сети, используя SSH (Secure Shell) для шифрования данных
		трансфер апликэитьон уровни
		Трансфер данных на уровне прикладного уровня (Application Layer) в сетевой модели, такой как OSI или TCP/IP, включает использование различных протоколов и технологий, которые обеспечивают взаимодействие между приложениями на разных устройствах.
		В сетевых технологиях relay (реле) может относиться к устройствам или протоколам, которые участвуют в пересылке данных или управляют потоком данных в сетях.
		роутеры больше всего работают на трех уровнях
		Docker использует tcp
		TCP (Transmission Control Protocol) — это один из основных протоколов транспортного уровня в сетевой модели TCP/IP, которая широко используется в интернете и других компьютерных сетях. 
		UDP (User Datagram Protocol) — это протокол транспортного уровня в сетевой модели TCP/IP, который обеспечивает доставку данных без гарантий надежности, упорядоченности или контроля потока. 
		Нет, не все протоколы работают поверх TCP (Transmission Control Protocol). В компьютерных сетях протоколы могут работать на разных уровнях сетевой модели OSI или TCP/IP, и они могут использовать различные протоколы транспортного уровня в зависимости от своих потребностей. Вот несколько примеров различных протоколов, используемых на разных уровнях сетевой модели:
Протоколы транспортного уровня:

    TCP (Transmission Control Protocol):
        Обеспечивает надежную, упорядоченную и контролируемую доставку данных. Используется для приложений, которым важна точность и надежность передачи данных, например, веб-просмотры, электронная почта, файловые передачи и т.д.

    UDP (User Datagram Protocol):
        Обеспечивает простую передачу данных без гарантии доставки или упорядочивания. Используется в приложениях, которым важна минимальная задержка и готовность жертвовать надежностью, например, в реальном времени потоковая передача данных, онлайн игры и некоторые типы VoIP.

Протоколы прикладного уровня:

    HTTP (HyperText Transfer Protocol):
        Используется для передачи веб-страниц и других ресурсов в Интернете. Может использовать TCP или HTTPS (HTTP over SSL/TLS) для обеспечения безопасности данных.

    FTP (File Transfer Protocol):
        Используется для передачи файлов между компьютерами. Может использовать как TCP, так и SSL/TLS для защищенной передачи данных.

    SMTP (Simple Mail Transfer Protocol):
        Используется для отправки электронной почты между серверами. Обычно использует TCP порт 25 или 587.

    DNS (Domain Name System):
        Используется для преобразования доменных имен в IP-адреса и наоборот. Использует UDP (порт 53) для запросов, но может использовать и TCP для больших запросов или ответов.

Примеры других протоколов на разных уровнях модели OSI/TCP/IP:

    Протоколы сетевого уровня: IP (Internet Protocol), ICMP (Internet Control Message Protocol).
    Протоколы канального уровня: Ethernet, Wi-Fi (802.11), PPP (Point-to-Point Protocol).
    Протоколы физического уровня: RS-232, USB, Ethernet PHY (Physical Layer).
    
    Команда traceroute (или tracert в операционной системе Windows) предназначена для определения маршрута данных от исходного узла (компьютера или сервера) до целевого узла
    printf — это функция форматированного вывода, аналогичная printf в C.
    awk — это мощный текстовый процессор, который используется для обработки и анализа текстовых данных.
		
=======
		git branch имя-ветки    - создать ветку
		git branch -d имя-ветки - чтобы удалить ветку
		
		git checkout имя-ветки - переключение между ветками
		
		git merge имя-ветки - чтобы слить текущюю ветку с веткой названия которой мы пишем
		
		git checkout linux.txt - чтобы востановить удаленный файл
		git fetch - забирает все файлы с репозитория
		git pull - определенную ветку
		git reset - отменить последний комит
		git reset --hard имя-комита - полное удаление
		комита
		git reset --soft - удаляет комит но оставляет файлы
		git revert - делает новый комит который создает еще один комит который отменяет последний комит
		
		.gitignore - файл куда отправляются файлы которые должен игнорировать git 
		
		git checkout -b название бранча чтобы сделать branch
		
		git diff
		
		git log - добавленные нами коммиты
		
		git add -a
		
тузы 
manualy

git rebase - тоже способ чтобы замерджить две ветки

когда мы делаем  

megre больше подохдит когда мы хотим видть изменения во всех ветках 

rebase 

merge request - git lab
pull request - git hub
a2s
		
		
весь ip адресс занимает 4 биты
